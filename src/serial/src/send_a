#include "rclcpp/rclcpp.hpp"
#include "std_msgs/msg/string.hpp"
#include <boost/asio.hpp>

using boost::asio::serial_port;
using boost::asio::io_service;

class SerialNode : public rclcpp::Node
{
public:
    SerialNode() : Node("serial_node"), port(io, "/dev/ttyS0")
    {
        port.set_option(serial_port::baud_rate(9600));
        timer_ = this->create_wall_timer(
            std::chrono::milliseconds(1000),
            std::bind(&SerialNode::timer_callback, this));
    }

private:
    void timer_callback()
    {
        boost::asio::write(port, boost::asio::buffer("asagohan\n"));
    }
    rclcpp::TimerBase::SharedPtr timer_;
    io_service io;
    serial_port port;
};

int main(int argc, char *argv[])
{
    rclcpp::init(argc, argv);
    rclcpp::spin(std::make_shared<SerialNode>());
    rclcpp::shutdown();
    return 0;
}